"use strict";angular.module("sayonaraAdminApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngMaterial","angular-loading-bar","textAngular","sayonaraAuth","sayonaraPages","sayonaraEntries","sayonaraEntryType","sayonaraAdmin"]).config(["$routeProvider","$mdThemingProvider",function(a,b){b.theme("default").primaryPalette("indigo").accentPalette("indigo").warnPalette("red").backgroundPalette("grey"),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/allpages",{templateUrl:"views/allpages.html",controller:"AllpagesCtrl",controllerAs:"allPages"}).when("/page/edit",{templateUrl:"views/pageedit.html",controller:"PageeditCtrl",controllerAs:"pageEdit"}).when("/allentry",{templateUrl:"views/allentries.html",controller:"AllentriesCtrl",controllerAs:"allEntries"}).when("/entry/edit",{templateUrl:"views/entryedit.html",controller:"EntryeditCtrl",controllerAs:"entryEdit"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl",controllerAs:"settings"}).otherwise({redirectTo:"/"})}]),angular.module("sayonaraAdminApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("sayonaraAdminApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("sayonaraAdminApp").directive("navBar",["$location","$mdSidenav","sayonaraAuthService",function(a,b,c){return{templateUrl:"views/templates/navbar.html",restrict:"E",link:function(d,e,f){function g(a){return function(){b(a).toggle()}}var h=function(){var b=a.path();"/"==b?d.currentNavItem="home":"/about"==b?d.currentNavItem="about":b.includes("page")?d.currentNavItem="pages":b.includes("entry")?d.currentNavItem="entries":b.includes("settings")?d.currentNavItem="settings":d.currentNavItem=""};h(),d.$on("$routeChangeSuccess",function(a,b,c){h()}),d.isLoggedIn=function(){return c.isLoggedIn("/login")},d.getPermissions=function(){return c.getUser()},d.logout=function(){c.logout()},d.toggleSideNav=g("left"),d.isMobile=function(){var a=window.matchMedia("(max-width: 767px)");return a.matches}}}}]),angular.module("sayonaraAdminApp").controller("LoginCtrl",["$scope","$location","adminNotify","sayonaraAuthService",function(a,b,c,d){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],d.isLoggedIn()&&b.path("/"),a.email="",a.password="",a.submitLogin=function(){d.loginUser(a.email,a.password).then(function(a){d.saveUser(a),c.showAlert("Welcome Back!"),b.path("/")},function(a){c.error(a,[{status:401,text:"Incorrect Password."},{status:404,text:"E-mail not found."}])})}}]),angular.module("sayonaraAdminApp").service("adminNotify",["$mdToast","$location","sayonaraAuthService",function(a,b,c){var d=function(b,c){a.show(a.simple().textContent(b).toastClass("appToast").position("top right")),c&&c()};return{showAlert:function(a,b){d(a,b)},error:function(a,b){var e=-1;if(b)for(var f=0;f<b.length;f++)a.status==b[f].status&&(e=a.status,b[f].callback?d(b[f].text,b[f].callback(a)):d(b[f].text));0>e&&(401==a.status?(d("Authentication error. Please log back in!"),c.logout()):402==a.status||d(404==a.status?"Not Found, Something could not be found. Please contact your developers, or try again":-1==a.status?"No Connection, Internet Connection is required to use this app. Please connect to the internet with your device, and restart the app.":500==a.status?"Server Error, Your connection may be bad, or the server is being problematic. Please contact your developer, or try again later.":"Error Status: "+a.status+", Unexpected Error. Please re-open the app, or try again later!"))}}}]),angular.module("sayonaraAdminApp").controller("AllpagesCtrl",["$scope","$location","adminNotify","sayonaraPageService",function(a,b,c,d){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.pages=[],d.getAllPages().then(function(b){b.forEach(function(a){a.date=moment(a.date).fromNow()}),a.pages=b},function(a){c.error(a)}),a.goToPage=function(a){a?b.path("/page/edit").search("id",a):b.path("/page/edit")}}]),angular.module("sayonaraAdminApp").controller("PageeditCtrl",["$scope","$routeParams","$location","adminNotify","sayonaraPageService","sayonaraAdminService",function(a,b,c,d,e,f){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.page={},b.id?(a.urlId=b.id,e.getPageById(b.id).then(function(b){a.page=b},function(a){d.error(a)})):a.page.title="New Sayonara Page",a.entryTypes=[],a.categories=[],f.getSettings().then(function(b){a.entryTypes=b.entryTypes,a.categories=b.categories},function(a){d.error(a)}),a.savePage=function(){b.id?g(b.id):h()};var g=function(b){var c={title:a.page.title,content:a.page.content,entryTypes:a.page.entryTypes};e.updatePageById(b,c).then(function(a){d.showAlert("Page Updated Successfully!")},function(a){d.error(a)})},h=function(){var b={title:a.page.title,content:a.page.content,entryTypes:a.page.entryTypes||[]};e.createPage(b).then(function(a){d.showAlert("Page Created Successfully!"),c.path("/allpages")},function(a){d.error(a)})};a.deletePage=function(){e.deletePageById(b.id).then(function(a){d.showAlert("Page Deleted Successfully!"),c.path("/allpages")},function(a){d.error(a)})}}]),angular.module("sayonaraAdminApp").directive("sayonaraContent",function(){return{templateUrl:"views/templates/sayonaracontent.html",restrict:"E",scope:{ngModel:"="},link:function(a,b,c){}}}),angular.module("sayonaraAdminApp").controller("AllentriesCtrl",["$scope","$location","adminNotify","sayonaraEntryTypeService",function(a,b,c,d){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.entryTypes=[],d.getAllEntryTypes(!0).then(function(b){b.forEach(function(a){a.entries.forEach(function(a){a.date=moment(a.date).fromNow()})}),a.entryTypes=b},function(a){c.error(a)}),a.goToEntry=function(a){a?b.path("/entry/edit").search("id",a):b.path("/entry/edit")}}]),angular.module("sayonaraAdminApp").controller("EntryeditCtrl",["$scope","$routeParams","$location","adminNotify","sayonaraEntryService","sayonaraAdminService",function(a,b,c,d,e,f){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.entry={},b.id?(a.urlId=b.id,e.getEntryById(b.id).then(function(b){a.entry=b},function(a){d.error(a)})):a.entry.title="New Sayonara Entry",a.entryTypes=[],a.categories=[],f.getSettings().then(function(b){a.entryTypes=b.entryTypes,a.categories=b.categories},function(a){d.error(a)}),a.saveEntry=function(){b.id?g(b.id):h()};var g=function(b){var c={title:a.entry.title,content:a.entry.content};e.updateEntryById(b,c).then(function(a){d.showAlert("Entry Updated Successfully!")},function(a){d.error(a)})},h=function(){var b={title:a.entry.title,content:a.entry.content,entryType:a.entry.entryType};e.createEntry(b).then(function(a){d.showAlert("Entry Created Successfully!"),c.path("/allentries")},function(a){d.error(a)})};a.deleteEntry=function(){e.deleteEntryById(b.id).then(function(a){d.showAlert("Entry Deleted Successfully!"),c.path("/allentries")},function(a){d.error(a)})}}]),angular.module("sayonaraAdminApp").directive("sayonaraSelector",["$timeout",function(a){return{templateUrl:"views/templates/sayonaraselector.html",restrict:"E",scope:{ngModel:"=",selections:"<",selectorLabel:"@",multipleSelection:"@",onSelect:"&"},link:function(b,c,d){b.selectionSearch="",b.selectClosed=function(){b.selectionSearch="",a(function(){b.onSelect({selection:b.ngModel})},0)}}}}]),angular.module("sayonaraAdminApp").controller("SettingsCtrl",["$scope","adminNotify","sayonaraEntryTypeService","sayonaraAdminService",function(a,b,c,d){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.showList={entryTypes:!1,categories:!1},a.entryTypes=[],a.categories=[],d.getSettings().then(function(b){a.entryTypes=b.entryTypes,a.categories=b.categories},function(a){b.error(a)}),a.saveEntryType=function(a){var d=Object.assign({},a);delete d._id,delete d.entries,c.updateEntryTypeById(a._id,d).then(function(a){b.showAlert("Saved the entry type!")},function(a){b.error(a)})}}]),angular.module("sayonaraAdminApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/allentries.html",'<h1 class="centerText contentHeader">Entries</h1> <div class="centerText elementDescription"> This view shows all current entries for the website, organized by entry type. You can create a new entry by clicking "New Entry" below. You can edit a entry, by clicking "Edit" on the corresponding entry. </div> <div class="centerText"> <md-button class="center md-raised md-primary" ng-click="goToEntry()">New Entry</md-button> </div> <!-- Ng-for through all the entries --> <div class="center contentContainer" ng-repeat="entryType in entryTypes"> <h2 class="contentTypeTitle">{{entryType.title}}</h2> <md-card class="contentCard" ng-repeat="content in entryType.entries"> <md-card-title> <md-card-title-text class="centerText"> <span class="md-headline">{{content.title}}</span> </md-card-title-text> </md-card-title> <md-card-content> <!-- Preview of content --> <div class="contentPreviewContainer"> <div class="contentPreview" ng-bind-html="content.content"></div> </div> <p>Date: {{content.date}}</p> </md-card-content> <md-card-actions layout="row" layout-align="end center"> <md-button class="md-raised" ng-click="goToEntry(content._id)">Edit</md-button> </md-card-actions> </md-card> </div>'),a.put("views/allpages.html",'<h1 class="centerText contentHeader">Pages</h1> <div class="centerText elementDescription"> This view shows all current pages for the website. You can create a new page by clicking "New Page" below. You can edit a page, by clicking "Edit" on the corresponding page. </div> <div class="centerText"> <md-button class="center md-raised md-primary" ng-click="goToPage()">New Page</md-button> </div> <!-- Ng-for through all the pages --> <div class="center contentContainer"> <md-card class="contentCard" ng-repeat="content in pages"> <md-card-title> <md-card-title-text class="centerText"> <span class="md-headline">{{content.title}}</span> </md-card-title-text> </md-card-title> <md-card-content> <!-- Preview of content --> <div class="contentPreviewContainer"> <div class="contentPreview" ng-bind-html="content.content"></div> </div> <p>Date: {{content.date}}</p> </md-card-content> <md-card-actions layout="row" layout-align="end center"> <md-button class="md-raised" ng-click="goToPage(content._id)">Edit</md-button> </md-card-actions> </md-card> </div>'),a.put("views/entryedit.html",'<h1>{{entry.title}}</h1> <!-- The title of the content --> <md-input-container class="editInput"> <label>Title</label> <input type="input" ng-model="entry.title"> </md-input-container> <!-- The Entry type of the content --> <sayonara-selector ng-model="entry.entryType" on-select="testing(selection)" selections="entryTypes" selector-label="Entry Type"></sayonara-selector> <!-- The content of the content --> <sayonara-content ng-model="entry.content"></sayonara-content> <!-- Save button --> <div class="centerText"> <md-button class="center md-raised md-primary" ng-disabled="page.title.length < 1" ng-click="saveEntry()">Save Entry</md-button> </div> <!-- Delete button --> <div class="centerText" ng-if="urlId"> <md-button class="center md-raised md-warn" ng-click="deleteEntry()">Delete Entry</md-button> </div>'),a.put("views/login.html",'<!-- Derived from the following codepen: http://codepen.io/ThomasBurleson/pen/wBgVpa --> <div layout="column" class="loginBox md-whiteframe-z1"> <md-toolbar> <h2 class="md-toolbar-tools"><span>Login</span></h2> </md-toolbar> <md-content layout="column" class="md-padding"> <form ng-submit="submitLogin()"> <md-input-container class="authInput"> <label>Email</label> <input type="email" ng-model="email"> </md-input-container> <md-input-container class="authInput"> <label>Password</label> <input type="password" ng-model="password"> </md-input-container> <div layout="row" layout-align="center center" style="padding-top:20px"> <md-button type="submit" class="md-raised md-primary" ng-disabled="$scope.email.length < 1 || $scope.password.length < 1">Login</md-button> <div flex="flex"></div> <!-- <md-button href="" md-no-ink="md-no-ink">Forgot Password</md-button> --> </div> </form> </md-content> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="admin/images/yeoman.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/pageedit.html",'<h1>{{page.title}}</h1> <!-- The title of the page --> <md-input-container class="editInput"> <label>Title</label> <input type="input" ng-model="page.title"> </md-input-container> <!-- The Entry type of the content --> <sayonara-selector ng-model="page.entryTypes" on-select="testing(selection)" selections="entryTypes" selector-label="Displayed Entry Types" multiple-selection="true"></sayonara-selector> <!-- The content of the page --> <sayonara-content ng-model="page.content"></sayonara-content> <!-- Save button --> <div class="centerText"> <md-button class="center md-raised md-primary" ng-disabled="page.title.length < 1" ng-click="savePage()">Save Page</md-button> </div> <!-- Delete button --> <div class="centerText" ng-if="urlId"> <md-button class="center md-raised md-warn" ng-click="deletePage()">Delete Page</md-button> </div>'),a.put("views/settings.html",'<h1 class="centerText contentHeader">Settings</h1> <div class="centerText elementDescription"> This view shows all settings for the site itself. You can define and edit Entry Types and Categories that are applied to pages and entries. Click the title "Entry Types" or "Categories" to expand the list of Entry Types or Categories. After expanding the list, you may also create new Entry Types or Catgories. </div> <!-- Ng-for through all the entry types --> <h2 class="settingTypeTitle centerText" ng-click="showList.entryTypes = !showList.entryTypes"> <a href="">Entry Types</a> </h2> <div class="centerText" ng-show="showList.entryTypes"> <md-button class="center md-raised md-primary" ng-click="goToEntry()">New Entry Type</md-button> </div> <div class="contentContainer" ng-show="showList.entryTypes"> <md-card class="contentCard" ng-repeat="content in entryTypes"> <md-card-title> <md-input-container class="editInput centerText editTitle"> <input type="input" ng-model="entryTypes[$index].title"> </md-input-container> </md-card-title> <md-card-content> <!-- List the Properties of the entry type --> <div> <md-checkbox ng-model="content.hasContent" aria-label="Editable Content" class="md-primary"> Editable Content </md-checkbox> </div> <div> <md-checkbox ng-model="content.hasEmbedCodes" aria-label="Embed Codes" class="md-primary"> Embed Codes </md-checkbox> </div> <div> <md-checkbox ng-model="content.hasUploadUrls" aria-label="Upload Urls" class="md-primary"> Upload Urls </md-checkbox> </div> </md-card-content> <md-card-actions layout="row" layout-align="end center"> <md-button class="md-raised" ng-click="saveEntryType(content)">Save</md-button> </md-card-actions> </md-card> </div> <!-- Line Break Between the two clickable titles --> <br ng-show="!showList.entryTypes"> <!-- Ng-for through all the categories --> <h2 class="settingTypeTitle centerText" ng-click="showList.categories = !showList.categories"> <a href="">Categories</a> </h2> <div class="centerText" ng-show="showList.categories"> <md-button class="center md-raised md-primary" ng-click="goToEntry()">New Category</md-button> </div> <div class="settingsContainer" ng-show="showList.categories"> <md-card class="contentCard" ng-repeat="content in categories"> <!-- TODO: Make Title Editable --> <md-card-title> <md-card-title-text class="centerText"> <span class="md-headline">{{content.title}}</span> </md-card-title-text> </md-card-title> <md-card-content> <!-- List the Properties of the Category --> </md-card-content> <!-- TODO: Make this a save button --> <md-card-actions layout="row" layout-align="end center"> <md-button class="md-raised" ng-click="goToEntry(content._id)">Edit</md-button> </md-card-actions> </md-card> </div>'),a.put("views/templates/navbar.html",'<!-- Main Nav Bar for the app --> <md-nav-bar md-selected-nav-item="currentNavItem" nav-bar-aria-label="navigation links"> <!-- Nav for desktop and Mobile --> <md-button class="md-icon-button navMobileButton" aria-label="More" ng-if="isMobile()" ng-click="toggleSideNav()"> <md-icon class="material-icons md-light md-48">more_vert</md-icon> </md-button> <span class="md-headline navLogo">Sayonara Admin</span> <!-- Desktop Width nav --> <div ng-if="!isMobile()" class="desktopNavContainer"> <md-nav-item md-nav-href="#/" ng-if="isLoggedIn()" name="home">Home</md-nav-item> <md-nav-item md-nav-href="#/about" ng-if="isLoggedIn()" name="about">About</md-nav-item> <md-nav-item md-nav-href="#/allpages" ng-if="isLoggedIn()" name="pages">Pages</md-nav-item> <md-nav-item md-nav-href="#/allentry" ng-if="isLoggedIn()" name="entries">Entries</md-nav-item> <md-nav-item md-nav-href="#/settings" ng-if="isLoggedIn()" name="entries">Settings</md-nav-item> <md-nav-item md-nav-click="logout()" ng-if="isLoggedIn()" name="dashboard">Log Out</md-nav-item> </div> </md-nav-bar> <!-- Side nav for mobile devices --> <md-sidenav class="md-sidenav-left navSideBar" md-component-id="left" md-whiteframe="4" ng-if="isMobile()"> <md-toolbar class="md-theme-indigo"> <h1 class="md-toolbar-tools">Navigation</h1> </md-toolbar> <md-content layout-margin> <md-button ng-href="#/" ng-click="toggleSideNav()" ng-if="isLoggedIn()" class="sideNavItem"> Home </md-button> <md-button ng-href="#/about" ng-click="toggleSideNav()" ng-if="isLoggedIn()" class="sideNavItem"> About </md-button> <md-button ng-href="#/allpages" ng-click="toggleSideNav()" ng-if="isLoggedIn()" class="sideNavItem"> Pages </md-button> <md-button ng-href="#/allentry" ng-click="toggleSideNav()" ng-if="isLoggedIn()" class="sideNavItem"> Entries </md-button> <md-button ng-href="#/settings" ng-click="toggleSideNav()" ng-if="isLoggedIn()" class="sideNavItem"> Settings </md-button> <md-button ng-click="toggleSideNav();logout()" ng-if="isLoggedIn()" class="sideNavItem"> Log Out </md-button> <!-- Close the sideNav --> <md-button ng-click="toggleSideNav()" class="md-accent sideNavItem"> Return to Page </md-button> </md-content> </md-sidenav>'),a.put("views/templates/sayonaracontent.html",'<div class="entryFieldContent"> <h3>Content:</h3> <text-angular ng-model="ngModel" ta-text-editor-class="textAngularEditor" ta-html-editor-class="textAngularEditor" ta-focussed-class="focussed" ta-toolbar-class="textAngularToolbar" ta-toolbar-group-class="textAngularGroup centerText" ta-toolbar-button-class="md-button md-raised" ta-toolbar-button-active-class="active"></text-angular> </div>'),a.put("views/templates/sayonaraselector.html",'<md-input-container class="editSelector"> <label>{{selectorLabel}}</label> <md-select ng-model="ngModel" md-on-close="selectClosed()" ng-attr-multiple="{{multipleSelection}}" data-md-container-class="editSelector"> <md-select-header class="editSelectorHeader"> <input ng-model="selectionSearch" type="search" placeholder="Search for an {{selectorLabel.substring(0,14)}}.." ng-keydown="$event.stopPropagation()" class="editSelectorSearch md-text"> </md-select-header> <md-optgroup label="{{selectorLabel}}"> <md-option ng-repeat="selection in selections | filter: selectionSearch" ng-value="selection._id"> {{selection.title}} </md-option> </md-optgroup> </md-select> </md-input-container>')}]);